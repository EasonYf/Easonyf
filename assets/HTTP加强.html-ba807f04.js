import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as e,d as n}from"./app-55302f36.js";const t={},l=n('<h2 id="http协议简介" tabindex="-1"><a class="header-anchor" href="#http协议简介" aria-hidden="true">#</a> HTTP协议简介</h2><h3 id="通信" tabindex="-1"><a class="header-anchor" href="#通信" aria-hidden="true">#</a> 通信：</h3><ul><li>通信的主体</li><li>通信的内容</li><li>通信的方式</li></ul><h3 id="通信协议" tabindex="-1"><a class="header-anchor" href="#通信协议" aria-hidden="true">#</a> 通信协议</h3><ul><li>通信协议是指通信的双方完成通信所必须遵守的规则和约定</li></ul><h3 id="http协议" tabindex="-1"><a class="header-anchor" href="#http协议" aria-hidden="true">#</a> HTTP协议</h3><ul><li>HTTP协议即超文本传送协议，它规定了客户端与服务器之间进行网页内容传输时，所必须遵守的传输格式</li></ul><h4 id="http协议的交互模型" tabindex="-1"><a class="header-anchor" href="#http协议的交互模型" aria-hidden="true">#</a> HTTP协议的交互模型</h4><ul><li>HTTP协议采用了 请求/响应 的交互模型</li></ul><h2 id="http请求" tabindex="-1"><a class="header-anchor" href="#http请求" aria-hidden="true">#</a> HTTP请求</h2><h3 id="http的请求消息" tabindex="-1"><a class="header-anchor" href="#http的请求消息" aria-hidden="true">#</a> HTTP的请求消息</h3><ul><li>由于HTTP协议属于客户端浏览器和服务器之间的通信协议，因此，客户端发起的请求叫做HTTP请求，客户端发送到服务器的消息，叫做HTTP请求消息。</li><li>注意：HTTP请求消息又叫做HTTP请求报文</li></ul><h3 id="http请求消息的组成部分" tabindex="-1"><a class="header-anchor" href="#http请求消息的组成部分" aria-hidden="true">#</a> HTTP请求消息的组成部分</h3><ul><li>HTTP请求消息由请求行、请求头部、空行和请求体4个部分组成</li><li><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/1685955484394-b200d637-d00d-455e-9d4d-cfdf5a6507b6.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></li></ul><h4 id="请求行" tabindex="-1"><a class="header-anchor" href="#请求行" aria-hidden="true">#</a> 请求行</h4><ul><li>请求行由请求方式、URL和HTTP协议版本3个部分组成，他们之间使用空格隔开</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032305879.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="请求头部" tabindex="-1"><a class="header-anchor" href="#请求头部" aria-hidden="true">#</a> 请求头部</h4><ul><li>请求头部用来描述客户端的基本信息，从而把客户端相关的信息告知服务器。</li><li>请求头部由多行键/值对组成，每行的键和值之间用英文的冒号分隔</li></ul><p><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306828.png" alt="image.png" loading="lazy"><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306282.png" alt="image.png" loading="lazy"></p><h4 id="空行" tabindex="-1"><a class="header-anchor" href="#空行" aria-hidden="true">#</a> 空行</h4><ul><li>最后一个请求头字段的后面是一个空行，通知服务器请求头部到此结束</li><li>请求消息中的空行，用来分隔请求头部与请求体</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306683.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="请求体" tabindex="-1"><a class="header-anchor" href="#请求体" aria-hidden="true">#</a> 请求体</h4><ul><li>请求体中存放的，是通过POST方式提交到服务器的数据</li><li>只有POST有请求体</li></ul><h2 id="http响应" tabindex="-1"><a class="header-anchor" href="#http响应" aria-hidden="true">#</a> HTTP响应</h2><h3 id="http响应消息的组成部分" tabindex="-1"><a class="header-anchor" href="#http响应消息的组成部分" aria-hidden="true">#</a> HTTP响应消息的组成部分</h3><ul><li>HTTP响应消息由状态行、响应头部、空行和响应体4个部分组成</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306904.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="http请求方法" tabindex="-1"><a class="header-anchor" href="#http请求方法" aria-hidden="true">#</a> HTTP请求方法</h2><ul><li>HTTP请求方法，属于HTTP协议中的一部分，请求方法的作用是：用来表明要对服务器上资源执行的操作，最常用的请求方法是GET和POST</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306207.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="http响应状态代码" tabindex="-1"><a class="header-anchor" href="#http响应状态代码" aria-hidden="true">#</a> HTTP响应状态代码</h2><ul><li>HTTP响应状态码，属于HTTP协议的一部分，用来标识响应的状态</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306239.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="http响应状态码的组成及分类" tabindex="-1"><a class="header-anchor" href="#http响应状态码的组成及分类" aria-hidden="true">#</a> HTTP响应状态码的组成及分类</h3><ul><li>HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字用来对状态码进行细分，HTTP状态码分为5种类型</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306081.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_2-成功相关的响应状态码" tabindex="-1"><a class="header-anchor" href="#_2-成功相关的响应状态码" aria-hidden="true">#</a> <code>2**</code>成功相关的响应状态码</h3><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306025.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_3-重定向相关的响应状态码" tabindex="-1"><a class="header-anchor" href="#_3-重定向相关的响应状态码" aria-hidden="true">#</a> <code>3**</code>重定向相关的响应状态码</h3><ul><li><code>3**</code>范围的状态码，表示服务器要求客户端重定向，需要客户端进一步的操作以完成资源的请求。</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306329.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_4-客户端错误相关的响应状态码" tabindex="-1"><a class="header-anchor" href="#_4-客户端错误相关的响应状态码" aria-hidden="true">#</a> <code>4**</code>客户端错误相关的响应状态码</h3><ul><li><code>4**</code>范围的状态码，表示客户端的请求有非法内容，从而导致这次请求失败</li></ul><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306501.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_5-服务器端错误" tabindex="-1"><a class="header-anchor" href="#_5-服务器端错误" aria-hidden="true">#</a> <code>5**</code>服务器端错误</h3><figure><img src="https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311032306985.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure>',48),h=[l];function c(d,g){return i(),e("div",null,h)}const s=a(t,[["render",c],["__file","HTTP加强.html.vue"]]);export{s as default};
