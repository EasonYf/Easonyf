const n=JSON.parse('{"key":"v-e6989106","path":"/demo/algorithm/c/%E7%9B%B8%E5%BA%94%E9%A2%98%E7%9B%AE3.html","title":"相应题目","lang":"zh-CN","frontmatter":{"title":"相应题目","description":"数组替换 image.png 思路：循环输入10个数，将&lt;= 0的数替换成1 #include &lt;bits/stdc++.h&gt; using namespace std; int main(){ int a[20]; for(int i = 0 ; i &lt; 10; i++) cin &gt;&gt;a[i]; for(int i = 0 ; i &lt; 10 ; i++){ if(a[i] &lt;= 0) a[i] = 1; printf(\\"X[%d] = %d\\\\n\\",i,a[i]); } return 0; }","head":[["meta",{"property":"og:url","content":"https://github.com/EasonYf/Easonyf/demo/algorithm/c/%E7%9B%B8%E5%BA%94%E9%A2%98%E7%9B%AE3.html"}],["meta",{"property":"og:site_name","content":"EasonYF"}],["meta",{"property":"og:title","content":"相应题目"}],["meta",{"property":"og:description","content":"数组替换 image.png 思路：循环输入10个数，将&lt;= 0的数替换成1 #include &lt;bits/stdc++.h&gt; using namespace std; int main(){ int a[20]; for(int i = 0 ; i &lt; 10; i++) cin &gt;&gt;a[i]; for(int i = 0 ; i &lt; 10 ; i++){ if(a[i] &lt;= 0) a[i] = 1; printf(\\"X[%d] = %d\\\\n\\",i,a[i]); } return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Easonyf"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"相应题目\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Easonyf\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"数组替换","slug":"数组替换","link":"#数组替换","children":[]},{"level":2,"title":"斐波拉契数列","slug":"斐波拉契数列","link":"#斐波拉契数列","children":[]},{"level":2,"title":"数组的行","slug":"数组的行","link":"#数组的行","children":[]},{"level":2,"title":"平方矩阵Ⅰ","slug":"平方矩阵i","link":"#平方矩阵i","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.06,"words":1217},"filePathRelative":"demo/algorithm/c/相应题目3.md","excerpt":"<h2> 数组替换</h2>\\n<figure><img src=\\"https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311061800739.png\\" alt=\\"image.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image.png</figcaption></figure>\\n<ul>\\n<li>思路：循环输入10个数，将&lt;= 0的数替换成1</li>\\n</ul>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;bits/stdc++.h&gt;</span></span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> a<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> cin <span class=\\"token operator\\">&gt;&gt;</span>a<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span> <span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> a<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        \\n        <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"X[%d] = %d\\\\n\\"</span><span class=\\"token punctuation\\">,</span>i<span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
