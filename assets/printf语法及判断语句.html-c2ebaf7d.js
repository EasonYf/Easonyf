const n=JSON.parse('{"key":"v-5fb133d3","path":"/demo/algorithm/c/printf%E8%AF%AD%E6%B3%95%E5%8F%8A%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5.html","title":"printf语法及判断语句","lang":"zh-CN","frontmatter":{"title":"printf语法及判断语句","category":["算法"],"tag":["c/c++"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"printf #include &lt;iostream&gt; /* run this program using the console pauser or add your own getch, system(\\"pause\\") or input loop */ using namespace std; //命名空间 int main(int argc, char** argv) { printf(\\"HELLO WORLD!\\"); return 0; }","head":[["meta",{"property":"og:url","content":"https://github.com/EasonYf/Easonyf/demo/algorithm/c/printf%E8%AF%AD%E6%B3%95%E5%8F%8A%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5.html"}],["meta",{"property":"og:site_name","content":"EasonYF"}],["meta",{"property":"og:title","content":"printf语法及判断语句"}],["meta",{"property":"og:description","content":"printf #include &lt;iostream&gt; /* run this program using the console pauser or add your own getch, system(\\"pause\\") or input loop */ using namespace std; //命名空间 int main(int argc, char** argv) { printf(\\"HELLO WORLD!\\"); return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Easonyf"}],["meta",{"property":"article:tag","content":"c/c++"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"printf语法及判断语句\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Easonyf\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"printf","slug":"printf","link":"#printf","children":[{"level":3,"title":"不同类型输出","slug":"不同类型输出","link":"#不同类型输出","children":[]},{"level":3,"title":"最小数字宽度","slug":"最小数字宽度","link":"#最小数字宽度","children":[]}]},{"level":2,"title":"判断语句","slug":"判断语句","link":"#判断语句","children":[{"level":3,"title":"if","slug":"if","link":"#if","children":[]},{"level":3,"title":"if(){}else(){}","slug":"if-else","link":"#if-else","children":[]},{"level":3,"title":"if else 连写","slug":"if-else-连写","link":"#if-else-连写","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.47,"words":442},"filePathRelative":"demo/algorithm/c/printf语法及判断语句.md","excerpt":"<h2> printf</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token comment\\">/* run this program using the console pauser or add your own getch, system(\\"pause\\") or input loop */</span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//命名空间</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> argc<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">char</span><span class=\\"token operator\\">*</span><span class=\\"token operator\\">*</span> argv<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"HELLO WORLD!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
