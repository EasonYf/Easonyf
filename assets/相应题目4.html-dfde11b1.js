const n=JSON.parse('{"key":"v-e32edfc8","path":"/demo/algorithm/c/%E7%9B%B8%E5%BA%94%E9%A2%98%E7%9B%AE4.html","title":"相应题目","lang":"zh-CN","frontmatter":{"title":"相应题目","description":"偶数 image.png 考点：for循环、偶数判断 #include &lt;iostream&gt; using namespace std; int main() { for(int i = 1; i &lt;= 100;i++) if(i % 2 == 0) cout &lt;&lt; i &lt;&lt; \\"\\\\n\\"; return 0; }","head":[["meta",{"property":"og:url","content":"https://github.com/EasonYf/Easonyf/demo/algorithm/c/%E7%9B%B8%E5%BA%94%E9%A2%98%E7%9B%AE4.html"}],["meta",{"property":"og:site_name","content":"EasonYF"}],["meta",{"property":"og:title","content":"相应题目"}],["meta",{"property":"og:description","content":"偶数 image.png 考点：for循环、偶数判断 #include &lt;iostream&gt; using namespace std; int main() { for(int i = 1; i &lt;= 100;i++) if(i % 2 == 0) cout &lt;&lt; i &lt;&lt; \\"\\\\n\\"; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Easonyf"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"相应题目\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Easonyf\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"偶数","slug":"偶数","link":"#偶数","children":[]},{"level":2,"title":"乘法表","slug":"乘法表","link":"#乘法表","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"demo/algorithm/c/相应题目4.md","excerpt":"<h2> 偶数</h2>\\n<figure><img src=\\"https://eason-blog.oss-cn-chengdu.aliyuncs.com/blogPicture/202311061801275.png\\" alt=\\"image.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image.png</figcaption></figure>\\n<ul>\\n<li>考点：for循环、偶数判断</li>\\n</ul>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">;</span>i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">%</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> cout <span class=\\"token operator\\">&lt;&lt;</span> i <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
