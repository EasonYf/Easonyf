const t=JSON.parse(`{"key":"v-46bd2744","path":"/demo/algorithm/c/%E5%AD%97%E7%AC%A6%E4%B8%B2.html","title":"字符串","lang":"zh-CN","frontmatter":{"title":"字符串","category":["算法"],"tag":["c/c++"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"字符与字符串 有单引号括起来的一个字符被称作char型字面值，双引号括起来的零个或多个字符则构成字符串字面值。字符串字面值的类型实际上就是常量字符构成的字符数组，编译器在每一个字符串后面添加空字符（'\\\\0'）结尾，因此字符串的实际长度要比它的内容多1 string类字符串 C++ 中提供了专门的头文件 string（注意不是 string.h，这个是 C 风格字符串相关函数的头文件），来支持 string 类型。string 类定义隐藏了字符串的数组性质，让我们可以像处理普通变量那样处理字符串。string 对象和字符数组之间的主要区别是：可以将 string 对象声明为简单变量，而不是数组。 typedef basic_string string也就是说C++中的string类是一个泛型类，由模板而实例化的一个标准类，本质上不是一个标准数据类型。","head":[["meta",{"property":"og:url","content":"https://github.com/EasonYf/Easonyf/demo/algorithm/c/%E5%AD%97%E7%AC%A6%E4%B8%B2.html"}],["meta",{"property":"og:site_name","content":"EasonYF"}],["meta",{"property":"og:title","content":"字符串"}],["meta",{"property":"og:description","content":"字符与字符串 有单引号括起来的一个字符被称作char型字面值，双引号括起来的零个或多个字符则构成字符串字面值。字符串字面值的类型实际上就是常量字符构成的字符数组，编译器在每一个字符串后面添加空字符（'\\\\0'）结尾，因此字符串的实际长度要比它的内容多1 string类字符串 C++ 中提供了专门的头文件 string（注意不是 string.h，这个是 C 风格字符串相关函数的头文件），来支持 string 类型。string 类定义隐藏了字符串的数组性质，让我们可以像处理普通变量那样处理字符串。string 对象和字符数组之间的主要区别是：可以将 string 对象声明为简单变量，而不是数组。 typedef basic_string string也就是说C++中的string类是一个泛型类，由模板而实例化的一个标准类，本质上不是一个标准数据类型。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Easonyf"}],["meta",{"property":"article:tag","content":"c/c++"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Easonyf\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"字符与字符串","slug":"字符与字符串","link":"#字符与字符串","children":[]},{"level":2,"title":"string类字符串","slug":"string类字符串","link":"#string类字符串","children":[{"level":3,"title":"string的初始化","slug":"string的初始化","link":"#string的初始化","children":[]},{"level":3,"title":"获取string对象的长度","slug":"获取string对象的长度","link":"#获取string对象的长度","children":[]},{"level":3,"title":"string对象的复制","slug":"string对象的复制","link":"#string对象的复制","children":[]},{"level":3,"title":"string对象的拼接","slug":"string对象的拼接","link":"#string对象的拼接","children":[]},{"level":3,"title":"string对象的比较","slug":"string对象的比较","link":"#string对象的比较","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.5,"words":750},"filePathRelative":"demo/algorithm/c/字符串.md","excerpt":"<h2> 字符与字符串</h2>\\n<ul>\\n<li>有单引号括起来的一个字符被称作<code>char</code>型字面值，双引号括起来的零个或多个字符则构成字符串字面值。字符串字面值的类型实际上就是常量字符构成的字符数组，编译器在每一个字符串后面添加空字符（'\\\\0'）结尾，因此字符串的实际长度要比它的内容多1</li>\\n</ul>\\n<h2> <code>string</code>类字符串</h2>\\n<ul>\\n<li>C++ 中提供了专门的头文件 string（注意不是 string.h，这个是 C 风格字符串相关函数的头文件），来支持 string 类型。string 类定义隐藏了字符串的数组性质，让我们可以像处理普通变量那样处理字符串。<strong>string 对象和字符数组之间的主要区别是：可以将 string 对象声明为简单变量，而不是数组</strong>。</li>\\n<li><code>typedef basic_string string</code>也就是说C++中的string类是一个<a href=\\"https://so.csdn.net/so/search?q=%E6%B3%9B%E5%9E%8B%E7%B1%BB&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">泛型类</a>，由模板而实例化的一个标准类，本质上不是一个标准数据类型。</li>\\n</ul>","autoDesc":true}`);export{t as data};
