const n=JSON.parse('{"key":"v-261a9278","path":"/demo/algorithm/c/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html","title":"循环","lang":"zh-CN","frontmatter":{"title":"循环","category":["算法"],"tag":["c/c++"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"三种循环语句 for循环 基本格式：for(初始化;条件;调整) 当循环条件满足时，执行相同的条件，然后调整（比如i++,i--） 计算1~100的和 #include &lt;iostream&gt; using namespace std; int main() { int sum = 0; for(int i = 1; i &lt;= 100 ; i++) sum += i; cout &lt;&lt; sum; return 0; }","head":[["meta",{"property":"og:url","content":"https://github.com/EasonYf/Easonyf/demo/algorithm/c/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html"}],["meta",{"property":"og:site_name","content":"EasonYF"}],["meta",{"property":"og:title","content":"循环"}],["meta",{"property":"og:description","content":"三种循环语句 for循环 基本格式：for(初始化;条件;调整) 当循环条件满足时，执行相同的条件，然后调整（比如i++,i--） 计算1~100的和 #include &lt;iostream&gt; using namespace std; int main() { int sum = 0; for(int i = 1; i &lt;= 100 ; i++) sum += i; cout &lt;&lt; sum; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Easonyf"}],["meta",{"property":"article:tag","content":"c/c++"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"循环\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Easonyf\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"三种循环语句","slug":"三种循环语句","link":"#三种循环语句","children":[{"level":3,"title":"for循环","slug":"for循环","link":"#for循环","children":[]},{"level":3,"title":"while循环","slug":"while循环","link":"#while循环","children":[]},{"level":3,"title":"do-while循环","slug":"do-while循环","link":"#do-while循环","children":[]}]},{"level":2,"title":"循环辅助语句","slug":"循环辅助语句","link":"#循环辅助语句","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.05,"words":316},"filePathRelative":"demo/algorithm/c/循环语句.md","excerpt":"<h2> 三种循环语句</h2>\\n<h3> <code>for</code>循环</h3>\\n<ul>\\n<li>基本格式：<code>for(初始化;条件;调整)</code></li>\\n<li>当循环条件满足时，执行相同的条件，然后调整（比如i++,i--）</li>\\n</ul>\\n<p>计算1~100的和</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> sum <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">100</span> <span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> sum <span class=\\"token operator\\">+=</span> i<span class=\\"token punctuation\\">;</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> sum<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
